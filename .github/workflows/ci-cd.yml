name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - backend
      - staging-backend
  pull_request:
    branches:
      - backend
      - staging-backend

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12.6'

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt

  test:
    runs-on: ubuntu-latest
    needs: build

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5433:5432
        options: >-
          --health-cmd="pg_isready -U test_user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12.6'

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DATABASE_NAME: test_db
        DATABASE_USER: test_user
        DATABASE_PASSWORD: test_password
        DATABASE_HOST: 127.0.0.1
        DATABASE_PORT: 5433
        EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
        EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
        EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
        EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
        EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      run: |
        pytest

  deploy-staging:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/staging-backend'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH Key for Staging
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.STAGING_SSH_KEY }}

    - name: Deploy to Staging
      run: |
        ssh ubuntu@staging-api.sdu-survival-kit.site "
        cd /home/ubuntu/sdu-survival-kit &&
        git pull origin staging-backend &&
        source env/bin/activate &&
        pip install -r requirements.txt &&
        python manage.py migrate &&
        sudo systemctl restart gunicorn &&
        sudo systemctl reload nginx
        "

  deploy-production:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/backend'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH Key for Production
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.PRODUCTION_SSH_KEY }}

    - name: Deploy to Production
      run: |
        ssh ubuntu@api.sdu-survival-kit.site "
        cd /home/ubuntu/sdu-survival-kit &&
        git pull origin backend &&
        source env/bin/activate &&
        pip install -r requirements.txt &&
        python manage.py migrate &&
        sudo systemctl restart gunicorn &&
        sudo systemctl reload nginx
        "
